/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.pc.views;

import java.awt.Color;

import com.mongodb.client.*;
import com.mongodb.client.gridfs.*;
import com.mongodb.client.model.Filters;
import org.bson.Document;
import org.bson.types.ObjectId;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;
import org.bson.conversions.Bson;


/**
 *
 * @author danie
 */
public class informacion extends javax.swing.JPanel {

    
    String IDtecnico_update;
    public informacion() {
        initComponents();
        IDtecnico_update = Registro.IDtecnico_update;
        InitStyles();
        displayImage();
    }
    
        private void InitStyles(){
        
    }
    
        private void displayImage() {
        MongoClient mongoClient = MongoClients.create("mongodb+srv://Edalmarc:udrNYnjBDhQvub8x@bic-edalmarc.svgqcpw.mongodb.net/Edalmarc?retryWrites=true&w=majority"); // Cambia la URL de conexión según tu configuración
        MongoDatabase database = mongoClient.getDatabase("Bic-edalmarc"); // Reemplaza "tu_base_de_datos" con el nombre de tu base de datos
        GridFSBucket gridFSBucket = GridFSBuckets.create(database);

        // Reemplaza "tu_id_mason" con el valor de id_mason que deseas utilizar para identificar la imagen
        String idMason =  "653b02444e6a684ef6e37be2";
        ObjectId objectId = new ObjectId(idMason);
        

        // Encuentra la imagen en la colección por id_mason
            Bson filter = Filters.eq("_id", objectId);
            FindIterable<Document> iterable = database.getCollection("images").find(filter);
            Document imageDocument = iterable.first();
            System.out.println(imageDocument);
            
            if (imageDocument != null) {
                ObjectId imageId = imageDocument.getObjectId("_id");
                System.out.println(imageId);

                try {
                    byte[] imageData = gridFSBucket.openDownloadStream(imageId).readAllBytes();

                    ImageIcon imageIcon = new ImageIcon(imageData);
                    JLabel label = new JLabel(imageIcon);
                    bg.removeAll();
                    bg.add(label);
                    revalidate();
                } catch (IOException e) {
                    e.printStackTrace();
                }
            } else {
                System.out.println("No se encontró un documento con _id: " + idMason);
            }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(750, 430));

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setMinimumSize(new java.awt.Dimension(0, 0));
        bg.setPreferredSize(new java.awt.Dimension(750, 430));

        javax.swing.GroupLayout bgLayout = new javax.swing.GroupLayout(bg);
        bg.setLayout(bgLayout);
        bgLayout.setHorizontalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 750, Short.MAX_VALUE)
        );
        bgLayout.setVerticalGroup(
            bgLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 430, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    // End of variables declaration//GEN-END:variables
}
